{"version":3,"sources":["Transaction.js","RemainingBalance.js","History.js","MyPortfolio.js","Avatar.js","App.js","index.js"],"names":["initialState","coin","quantity","quantityError","Transaction","state","handleChange","event","isCheckbox","target","type","setState","name","checked","value","validate","handleTransaction","e","transactionType","preventDefault","isValid","document","querySelector","Number","parseFloat","alert","fetch","method","mode","headers","Accept","body","JSON","stringify","then","data","json","props","refreshPage","Object","keys","this","coins","map","key","className","action","onSubmit","handleSubmit","onChange","renderOptions","placeholder","required","style","fontSize","color","onClick","Component","RemainingBalance","balance","response","values","myBalance","amount","toFixed","toString","renderBalance","history","loadHistory","id","unit_price","date","replace","Date","toLocaleDateString","MyPortfolio","loadPortfolio","portfolioItems","portfolio","filter","CoinBalance","useStyles","makeStyles","theme","root","display","margin","spacing","ImageAvatars","classes","Avatar","src","alt","App","x","res","coinValues","entries","cryptoData","price","console","log","to","pathname","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9175d34a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Transaction.css';\n\nconst initialState = {\n    coin : \"\",\n    quantity : null,\n    quantityError : null\n};\n\nexport class Transaction extends Component {\n     state = initialState;\n\n     handleChange = event => {\n        const isCheckbox = event.target.type === \"checkbox\";\n        this.setState({\n          [event.target.name]: isCheckbox\n            ? event.target.checked\n            : event.target.value\n        });\n      };\n\n    validate = () => {\n        let quantityError = \"\";\n        if(this.state.quantity === \"0\" && this.state.quantity === \"-0\"){\n            quantityError = \"Zero is not a valid quantity to trade\"     \n        }\n        if(quantityError){\n            this.setState({ quantityError});\n            return false;\n        }\n        return true;\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n    }\n    \n    handleTransaction = (e, transactionType = 'buy') => {\n        e.preventDefault();\n        const isValid = this.validate();\n        if (isValid) {\n        //  console.log(this.state);  \n\n        const name = document.querySelector(\"[name=coin]\").value;\n        let quantity = Number.parseFloat(document.querySelector(\"[name=quantity]\").value);\n        \n        if (transactionType === 'sell') {\n            quantity *= -1;\n        }\n        \n        alert(`${name} ${quantity}`);\n\n        fetch(\"https://i3g96.sse.codesandbox.io/coins/new\", {\n            method : \"POST\",\n            mode: \"cors\",\n            headers : {\n                Accept : \"application/json\",\n                \"Content-Type\" : \"application/json\",\n                \n            },\n            body: JSON.stringify({name:name, quantity:quantity})\n        }).then(data => data.json()).then(this.props.refreshPage)\n        this.setState(initialState);\n\n     }\n }\n\n    renderOptions(){\n        return Object.keys(this.props.coins).map((key) => (\n            <option key={key}>{key}</option>\n        ));\n    }\n     \n    render() {\n        return (\n            <div className=\"transaction__form\">\n                <form \n                    action=\"https://i3g96.sse.codesandbox.io/coins/new\" \n                    method=\"POST\"\n                    onSubmit={event=>this.handleSubmit(event)}\n                    >\n                    <table className=\"transaction__input\">\n                        <label>\n                            Coin:\n                            <select name=\"coin\"  value={this.state.coin} onChange={this.handleChange}>{this.renderOptions()}</select>\n                        </label>\n                        <label>\n                            Quantity:\n                          <input type=\"number\"  name = \"quantity\" value={this.state.quantity} onChange={this.handleChange} placeholder = \"Quantity\" required=\"required\" />\n                        </label>\n                        <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.quantityError}\n                        </div>\n                    </table>\n                    <div className=\"transaction__button\">\n                        <button type=\"submit\" onClick={event=>this.handleTransaction(event, 'buy')} className=\"trade__button buy\">Buy</button>\n                        <button type=\"submit\" onClick={event=>this.handleTransaction(event, 'sell')} className=\"trade__button sell\" >Sell</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Transaction;\n","import React, { Component } from 'react';\nimport './RemainingBalance.css';\n\nexport default class RemainingBalance extends Component {\n    state = {\n        balance : {}\n    };\n    componentDidMount(){\n        fetch(\"https://i3g96.sse.codesandbox.io/balance\")\n        .then(response => response.json())\n        .then(( balance ) => {\n            this.setState({ balance :  balance});\n            // console.log(\"REMAING BALANCE\",balance);  \n        });\n        \n    }\n    \n    renderBalance(){\n\t\treturn Object.values(this.state.balance).map((myBalance) => {\n\t\t\treturn (\n\t\t\t\t<li key={myBalance.name.toString()}>\n\t\t\t\t\t<h5>Welcome !{myBalance.name}</h5>\n\t\t\t\t\t<h5>Remaining balance:  ${myBalance.amount.toFixed()}</h5>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t}\n    render() {\n        return (\n            <div>\n            <ul>{this.renderBalance()}</ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./History.css\";\n\nexport default class history extends Component {\n    \n    componentDidMount(){\n        this.props.loadHistory();\n    }  \nrender() {\n    return (\n        <div className=\"history\">\n            <h1>History</h1>\n                <div className=\"table-container\">\n                    <table className=\"history__table\">\n                        <tr className=\"history__table__head\">\n                            <th>Name</th>\n                            <th>Unit price</th>\n                            <th>Date</th>\n                        </tr>\n                        {this.props.history.map(({ id, name, quantity, unit_price, date }) => (\n                                <tr key={date} >\n                                    <td> {name.replace(\"-\", \" \")}<br/>{quantity} { quantity === 1 | quantity < 1 ? \"token\" : \"tokens\"}</td>\n                                    <td>${Number(unit_price).toFixed(2)}</td>\n                                    <td>{new Date(date).toLocaleDateString()}</td>\n                                </tr>\n                            ))}\n                    </table>\n                </div>\n        </div>\n    )\n}\n}\n","import React, { Component } from 'react';\nimport './MyPortfolio.css'\n\nexport default class MyPortfolio extends Component {\n  \n    componentDidMount(){\n        this.props.loadPortfolio();\n    }\n    render() {\n        let portfolioItems =  this.props.portfolio\n            .filter(({CoinBalance}) => CoinBalance !== 0)\n            .map(({CoinBalance, name}) => (\n                <tr key={name} id=\"myList\">\n                    <td> {name.replace(\"-\", \" \")}</td>\n                    <td>{CoinBalance}</td>\n                </tr>\n            ))\n        \n        return (\n            <div className=\"portfolio\">\n                <h1 className=\"portfolio__heading__one\">Portfolio</h1>\n                <div className=\"portfolio__container\">\n                    <table className=\"portfolio__table\">\n                        <tr className=\"portfolio__table__head\" >\n                            <th>Name</th>\n                            <th>Quantity</th>\n                        </tr>\n                        {portfolioItems}\n                    </table>\n                </div>\n                    \n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport \"./Avatar.css\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nexport default function ImageAvatars() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Avatar  src=\"https://media-exp1.licdn.com/dms/image/C5603AQGlJfPN0Wu88w/profile-displayphoto-shrink_400_400/0/1627602129072?e=1635984000&v=beta&t=O99s6JoeCNEA6l7-azw37DO30e3WIWsfXJqstKlImvI\" alt=\"Remy Sharp\" />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Transaction from \"./Transaction\";\nimport RemainingBalance from \"./RemainingBalance\";\nimport History from \"./History\";\nimport MyPortfolio from \"./MyPortfolio\";\nimport Avatar from \"./Avatar\"\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n\nconst API_URL = \"https://i3g96.sse.codesandbox.io/cryptos\";\n\nexport class App extends Component {\n    \n    state = {\n        coins : {},\n        history: [],\n        portfolio : [],\n    };\n    loadPortfolio = () => {\n        fetch(\"https://i3g96.sse.codesandbox.io/portfolio\")\n            .then((x) => x.json())\n            .then((portfolio) => {\n                this.setState({portfolio : portfolio})\n            });\n    }\n\n    loadHistory = () => {\n        fetch(\"https://i3g96.sse.codesandbox.io/history\")\n            .then((x) => x.json())\n            .then((history) => {\n                this.setState({history : history})\n            });\n    }\n\n    componentDidMount(){\n        fetch(API_URL)\n            .then((x) => x.json())\n            .then((coins) => {\n              this.setState({ coins: coins});\n            });\n         }\n\n        renderOptions(){\n            return Object.keys(this.state.coins).map((key) => (\n                <option key={key} value={key}>{key}</option>\n            ));\n        }\n\n        refreshPage = () => {\n            this.loadPortfolio();\n            this.loadHistory();\n            fetch(\"https://i3g96.sse.codesandbox.io/cryptos\")\n            .then((res) => res.json())\n            .then(( coins) => {\n                this.setState({ coins : coins})\n                // console.log(\"Refresh page\", coins)\n            });            \n        }\n        \n    render() {\n        const coinValues = Object.entries(this.state.coins).map((cryptoData) =>{ \n            let price;\n            if (typeof cryptoData[1] === 'number') {\n                price = cryptoData[1];\n            } else {\n                price = cryptoData[1].unit_price;\n            }\n            console.log(cryptoData, price);\n            return (\n                \n                <tbody key={cryptoData.toString()}>\n                    <tr>\n                        <td>{cryptoData[0].replace(/-/,\" \")}</td>\n                        <td>${price}</td>\n                    </tr>\n                </tbody>\n            )\n        });\n\n        return(\n            <div className=\"app\">\n                <div className=\"app__container\">\n                    <div className=\"app__left\">\n                        <h1 className=\"app__heading\">Paper <span className=\"trading\">Trading</span> App</h1>\n                        <p className=\"note\">⚠️ Temporarily the server side code is in codesandbox.So we need to run the sever side code first to get fully loaded application</p>\n                        <div className=\"container\">\n                            <RemainingBalance />\n                            <Router>\n                                <Link target={\"_blank\"} to={{  pathname:\"https://codesandbox.io/s/zen-hamilton-i3g96?file=/src/index.js\" }}><button className=\"server__button\">Run Server</button></Link>\n                            </Router> \n                        </div>\n                        <Avatar />\n                        <h2>Cryptocurrencies </h2>\n                        \n                        <table className=\"app__table\">\n                            <tr className='app__table__head'>\n                                <th>Name</th>\n                                <th>Quantity</th>\n                            </tr>\n                                {coinValues}\n                        </table>\n                        <Transaction refreshPage={this.refreshPage} coins={this.state.coins} />\n                    </div>\n                    <div className=\"app__right\">\n                        <MyPortfolio portfolio={this.state.portfolio} loadPortfolio={this.loadPortfolio} />  \n                        <History history={this.state.history} loadHistory={this.loadHistory} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}